function Bullet.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 100
pop this 0
push constant 100
pop this 1
push pointer 0
return
function Bullet.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Bullet.setXY 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
return
function Bullet.getX 0
push argument 0
pop pointer 0
push this 0
return
function Bullet.getY 0
push argument 0
pop pointer 0
push this 1
return
function Bullet.checkCollision 6
push argument 0
pop pointer 0
push argument 1
call Bullet.getX 1
pop local 0
push argument 1
call Bullet.getY 1
pop local 1
push argument 3
call Tank.getX 1
pop local 2
push argument 3
call Tank.getY 1
pop local 3
push argument 2
call Tank.getX 1
pop local 4
push argument 2
call Tank.getY 1
pop local 5
push argument 2
call Tank.getDir 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 2
call Tank.getDir 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 3
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 2
push constant 15
sub
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 2
push constant 15
add
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 5
push local 3
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE4
label IF_FALSE3
label IF_FALSE2
label IF_FALSE1
push argument 2
call Tank.getDir 1
push constant 2
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push local 2
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 1
push local 3
push constant 15
sub
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 1
push local 3
push constant 15
add
lt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 4
push local 2
lt
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
not
return
label IF_FALSE10
label IF_FALSE9
label IF_FALSE8
label IF_FALSE7
label IF_FALSE6
push argument 2
call Tank.getDir 1
push constant 3
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 1
push local 3
gt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 0
push local 2
push constant 15
sub
gt
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 0
push local 2
push constant 15
add
lt
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 5
push local 3
lt
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 0
not
return
label IF_FALSE15
label IF_FALSE14
label IF_FALSE13
label IF_FALSE12
label IF_FALSE11
push argument 2
call Tank.getDir 1
push constant 4
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 0
push local 2
lt
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push local 1
push local 3
push constant 15
sub
gt
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push local 1
push local 3
push constant 15
add
lt
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push local 4
push local 2
gt
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push constant 0
not
return
label IF_FALSE20
label IF_FALSE19
label IF_FALSE18
label IF_FALSE17
label IF_FALSE16
push constant 0
return
function Bullet.fire 4
push argument 0
pop pointer 0
push argument 1
call Tank.getX 1
pop local 0
push argument 1
call Tank.getY 1
pop local 1
push argument 1
call Tank.getDir 1
pop local 2
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 1
push constant 16
sub
call Bullet.setXY 3
pop temp 0
label WHILE_EXP0
push this 1
push constant 1
gt
not
if-goto WHILE_END0
push pointer 0
call Bullet.erase 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push this 1
push argument 2
call Tank.getY 1
push constant 17
add
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push argument 2
call Tank.getX 1
push constant 15
sub
gt
push this 0
push argument 2
call Tank.getX 1
push constant 10
add
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push argument 2
call Tank.getX 1
push argument 2
call Tank.getY 1
push argument 2
call Tank.getDir 1
call Bullet.explode 4
pop temp 0
push argument 2
call Tank.erase 1
pop temp 0
push constant 0
pop this 1
push constant 0
not
pop local 3
label IF_FALSE2
goto IF_END1
label IF_FALSE1
push pointer 0
call Bullet.drawUp 1
pop temp 0
label IF_END1
push constant 3
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push this 1
push constant 1
gt
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Bullet.erase 1
pop temp 0
label IF_FALSE3
goto IF_END0
label IF_FALSE0
push local 2
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push local 0
push constant 16
add
push local 1
call Bullet.setXY 3
pop temp 0
label WHILE_EXP1
push this 0
push constant 1
add
push constant 511
lt
not
if-goto WHILE_END1
push pointer 0
call Bullet.erase 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push this 0
push argument 2
call Tank.getX 1
push constant 1
sub
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 1
push argument 2
call Tank.getY 1
push constant 15
sub
gt
push this 1
push argument 2
call Tank.getY 1
push constant 10
add
lt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
push argument 2
call Tank.getX 1
push argument 2
call Tank.getY 1
push argument 2
call Tank.getDir 1
call Bullet.explode 4
pop temp 0
push argument 2
call Tank.erase 1
pop temp 0
push constant 520
pop this 0
push constant 0
not
pop local 3
label IF_FALSE6
goto IF_END5
label IF_FALSE5
push pointer 0
call Bullet.drawRight 1
pop temp 0
label IF_END5
push constant 3
call Sys.wait 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push this 0
push constant 1
add
push constant 511
lt
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
call Bullet.erase 1
pop temp 0
label IF_FALSE7
goto IF_END4
label IF_FALSE4
push local 2
push constant 3
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push local 0
push local 1
push constant 16
add
call Bullet.setXY 3
pop temp 0
label WHILE_EXP2
push this 1
push constant 1
add
push constant 195
lt
not
if-goto WHILE_END2
push pointer 0
call Bullet.erase 1
pop temp 0
push this 1
push constant 1
add
pop this 1
push this 1
push argument 2
call Tank.getY 1
push constant 1
sub
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 0
push argument 2
call Tank.getX 1
push constant 15
sub
gt
push this 0
push argument 2
call Tank.getX 1
push constant 10
add
lt
and
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
push argument 2
call Tank.getX 1
push argument 2
call Tank.getY 1
push argument 2
call Tank.getDir 1
call Bullet.explode 4
pop temp 0
push argument 2
call Tank.erase 1
pop temp 0
push constant 220
pop this 1
push constant 0
not
pop local 3
label IF_FALSE10
goto IF_END9
label IF_FALSE9
push pointer 0
call Bullet.drawDown 1
pop temp 0
label IF_END9
push constant 3
call Sys.wait 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
push pointer 0
call Bullet.erase 1
pop temp 0
push this 1
push constant 1
add
push constant 200
lt
not
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push pointer 0
call Bullet.erase 1
pop temp 0
label IF_FALSE11
goto IF_END8
label IF_FALSE8
push local 2
push constant 4
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push pointer 0
push local 0
push constant 16
sub
push local 1
call Bullet.setXY 3
pop temp 0
label WHILE_EXP3
push this 0
push constant 1
sub
push constant 0
gt
not
if-goto WHILE_END3
push pointer 0
call Bullet.erase 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push this 0
push argument 2
call Tank.getX 1
push constant 17
add
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push this 1
push argument 2
call Tank.getY 1
push constant 15
sub
gt
push this 1
push argument 2
call Tank.getY 1
push constant 10
add
lt
and
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push pointer 0
push argument 2
call Tank.getX 1
push argument 2
call Tank.getY 1
push argument 2
call Tank.getDir 1
call Bullet.explode 4
pop temp 0
push argument 2
call Tank.erase 1
pop temp 0
push constant 0
pop this 0
push constant 0
not
pop local 3
label IF_FALSE14
goto IF_END13
label IF_FALSE13
push pointer 0
call Bullet.drawLeft 1
pop temp 0
label IF_END13
push constant 3
call Sys.wait 1
pop temp 0
goto WHILE_EXP3
label WHILE_END3
push this 0
push constant 1
sub
push constant 0
gt
not
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push pointer 0
call Bullet.erase 1
pop temp 0
label IF_FALSE15
label IF_FALSE12
label IF_END8
label IF_END4
label IF_END0
push pointer 0
push argument 3
push argument 1
push argument 2
call Bullet.checkCollision 4
pop local 3
push local 3
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push argument 2
call Tank.erase 1
pop temp 0
push argument 1
call Tank.erase 1
pop temp 0
push constant 0
not
return
label IF_FALSE16
push constant 0
return
function Bullet.explode 4
push argument 0
pop pointer 0
push constant 2
pop local 1
push constant 2
pop local 1
push constant 8
pop local 3
push constant 8
pop local 3
label WHILE_EXP0
push local 1
push local 3
lt
not
if-goto WHILE_END0
push local 1
push constant 2
add
pop local 1
push local 1
push constant 2
add
pop local 1
push pointer 0
call Bullet.erase 1
pop temp 0
push pointer 0
call Bullet.erase 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 7
add
push local 1
call Screen.drawCircle 3
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 7
add
push local 1
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 7
add
push local 1
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 7
add
push local 1
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 150
call Sys.wait 1
pop temp 0
push constant 150
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 7
add
push local 1
call Screen.drawCircle 3
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 7
add
push local 1
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Bullet.drawUp 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.drawRight 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 256
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 768
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 1792
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 3840
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 7936
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 16128
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 32512
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 256
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 256
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 32512
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 16128
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 7936
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 3840
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 1792
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 768
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 256
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.drawDown 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 384
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.drawLeft 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 128
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 192
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 224
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 240
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 248
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 252
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 254
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 255
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 255
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 254
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 252
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 248
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 240
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 224
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 192
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 128
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.erase 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
